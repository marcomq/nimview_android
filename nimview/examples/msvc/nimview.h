/* Generated by Nim Compiler v1.4.2 */
/*   (c) 2017 Andreas Rumpf */
/* The generated code is subject to the original license. */
#ifndef __nimview__
#define __nimview__
#define NIM_INTBITS 64

/* section: NIM_merge_HEADERS */

#include "nimbase.h"
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix

/* section: NIM_merge_FRAME_DEFINES */

/* section: NIM_merge_FORWARD_TYPES */

/* section: NIM_merge_TYPES */
typedef N_CDECL_PTR(NCSTRING, tyProc__cTCodr69cPNr9chtH7apXJYg) (NCSTRING value);
typedef N_CDECL_PTR(void, tyProc__32w2ZypAyMWuajvi2Jt79cg) (void* value);

/* section: NIM_merge_SEQ_TYPES */

/* section: NIM_merge_FIELD_INFO */

/* section: NIM_merge_TYPE_INFO */

/* section: NIM_merge_PROC_HEADERS */
N_LIB_PRIVATE N_NOCONV(void, signalHandler)(int sign);
N_LIB_PRIVATE N_NIMCALL(NI, getRefcount)(void* p);
N_LIB_PRIVATE N_NIMCALL(void, generalExternalInvokeCallback)(struct webview* w, NCSTRING arg);
N_LIB_PRIVATE N_NIMCALL(void, generalDispatchProc)(struct webview* w, void* arg);
N_LIB_IMPORT N_CDECL(void, initnimview)(void);
N_LIB_IMPORT N_CDECL(void*, PyInit_nimview)(void);
N_LIB_PRIVATE N_NIMCALL(void, nimview_addRequest)(NCSTRING request, tyProc__cTCodr69cPNr9chtH7apXJYg callback, tyProc__32w2ZypAyMWuajvi2Jt79cg freeFunc);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, nimview_dispatchRequest)(NCSTRING request, NCSTRING value);
N_LIB_PRIVATE N_NIMCALL(NCSTRING, nimview_dispatchCommandLineArg)(NCSTRING escapedArgv);
N_LIB_PRIVATE N_NIMCALL(void, nimview_readAndParseJsonCmdFile)(NCSTRING filename);
N_LIB_PRIVATE N_NIMCALL(void, nimview_startJester)(NCSTRING folder, int port, NCSTRING bindAddr);
N_LIB_PRIVATE N_NIMCALL(void, nimview_startWebview)(NCSTRING folder);
N_LIB_PRIVATE N_NIMCALL(void, nimview_start)(NCSTRING folder);

/* section: NIM_merge_DATA */

/* section: NIM_merge_VARS */

/* section: NIM_merge_PROCS */
N_LIB_IMPORT N_CDECL(void, NimMain)(void);
#endif /* __nimview__ */
